package com.rogers.testdatamanagement;

import com.rogers.yaml.pojo.*;
import org.testng.ITestNGMethod;

import java.io.FileNotFoundException;
import java.util.List;

public class TestDataHandler {	
	public static Config ssConfig;
	public static PaymentDetails paymentInfo;
	public static Config bfaConfig;
	public static DBConnection bdConnection;
	public static PaymentDetails bfaPaymentInfo;
	public static PaymentDetails chPaymentInfo;	
	public static AccountData tc013132;
	public static AccountData tc0224;
	public static AccountData tc041139;
	public static AccountData tc060809;
	public static AccountData tc1314;
	public static AccountData tc161825;
	public static AccountData tc1920;
	public static AccountData tc2751;
	public static AccountData tc36;
	public static AccountData tc495271;
	public static AccountData tc5074;
	public static AccountData tc54;
	public static AccountData tc55;
	public static AccountData tc56;
	public static AccountData tc57;
	public static AccountData tc58;
	public static AccountData tc59;
	public static AccountData tc6269;
	public static AccountData tc63;
	public static AccountData tc64;
	public static AccountData tc6577;
	public static AccountData tc727375;
	public static AccountData tc02;
	public static AccountData tc07;
	public static AccountData tc61;
	public static AccountData tc67;	
	public static AccountData tc78;
	public static AccountData tc7681;
	public static AccountData tc82;
	public static AccountData tc80;
	public static AccountData tc110_StandaloneInternetAccount;
	public static AccountData tc43_44_digitalTVAccount;
	public static AccountData tc16_17_18_19_SolarisInternetAccount;
	public static AccountData tc01_02_03_IgniteTVAccount;
	public static AccountData tc05_IgniteTV4Plus1Account;
	public static AccountData tc41IgniteTVAccount;
	public static AccountData tc04_07_SolarisTVAccount;
	public static AccountData tc22_StandaloneInternetAccountWithUsage;
	public static AccountData tc48_legacyRHP;
	public static AccountData tc42_igniteRHP;
	public static AccountData tc27_28_RogersSHM;
	public static AccountData tc15_SolarisInternetAccountWithUsage;
	public static AccountData tc42SolarisInternetAccountWithUsage;
	public static AccountData tc20_SolarisInternetAccountForUpgrade;
	public static AccountData tc09_SolarisTVAccountForUpgrade;
	public static AccountData tcm05_SolarisTVAccountForUpgrade;
	public static AccountData tc14_solarisTVAccountStarterPackage;
	public static AccountData tc14_SolarisTVAccountFlex5Package;
	public static AccountData tc14_solarisTVAccountPopularPackage;
	public static AccountData tc10_SolarisTVAccountForUpgradeON;
	public static AccountData tc12_SolarisTVAccountForUpgradeNL;
	public static AccountData tc11_SolarisTVAccountForUpgradeNB;
	public static AccountData tc37_internetAccountUpgrade;
	public static AccountData tc45_digitalTVAccountUpgradePackage;
	public static AccountData tc54_iginteTVWirelessCRMaddressMismatchWithSGI;
	public static AccountData tc55_rCISandECIDLowRiskMediumRiskAddressRetry;
	public static AccountData tc61_SHMSignedInInternetBuyDiffAddress;
	public static AccountData tc56_WirelessSignedInInternetBuyBasement;
	public static AccountData tc46_legacyInternetAccount;
	public static AccountData tcm04_SolarisInternetAccount;
	public static AccountData tcm06_IgniteTVAccount;
	public static AccountData tc39_40_SolarisPortinFlows;
	public static AccountData tc38_DigitalTVUpgradeToIgnite;
	public static AccountData tc21_SolarisInternetOldConstructor;
	public static AccountData tc08_SolarisTVOldConstructor;
	public static AccountData tc34_NoPortInAbondoneFlows;
	public static AccountData solarisInternetPackageChange;
	public static AccountData solarisTVAccountPackageUpgrade;
	public static AccountData solarisMultipleSubscriptions;
	public static AccountData tc13_SolarisChangeTVPackageAdd4KChannelsAndThemePack;
	public static AccountData tc06_2_SolarisChangeTVManageChannels;
	public static AccountData tc06_1_SolarisChangeTVManageThemePacks;
	public static AccountData tc35_CRMaddressMismatchWithSGI;
	public static AccountData tc29_IgniteServiceabilityAddressNB;
	public static AccountData tc62_wirelessSignedInInternetBuy;
	public static AccountData tc60_WirelessSignedInInternetBuyDiffAddress;
	public static AccountData tc63_ShmSignedInInternetBuyBasement;
	public static AccountData tc65_IgniteSmartStreamNL;
	public static AccountData tc73_IgniteTVAccountMultipleSwap;
	public static AccountData tc74_SaiBaseLineHomeAddress;
	public static AccountData tc75_IgniteTVBaseLineHomeAddress;
	public static AccountData tc76_Legact2Pto3PIgniteBasementHousePortinHot;
	public static AccountData tc82_Legacy1PtoIgnite2P;
	public static AccountData tc83_Legacy2PtoIgnite2P;
	public static AccountData tc87_NativeTNcourierFulfilmentHot;
	public static AccountData tc88_Legacy2PTVIntToIgnite3P;
	public static AccountData tc89_Legacy3pToIgnite3P;
	public static AccountData tc90_Legacy1PTVtoIgnite2P;
	public static AccountData tc92_2L7ContractType3PBulkTenant;
	public static AccountData tc93_FWACappedPlan;
	public static AccountData tc98_RogersSHM_NB;
	public static AccountData tc102_IPTVAccount;
	public static AccountData tc57_sHMSignedInInternetBuy;
	public static AccountData tc51_igniteSmartStream;
	public static AccountData tc31_SolarisInternetAccountWithUsageAndPackageUpgrade;
	public static AccountData tc23_24_standaloneInternetAccountforUpgrade;
	public static AccountData solarisConsumerNoPortinCartAbandon;
	public static AccountData solarisConsumerPortInCartAbandon;
	public static AccountData tc58_saiAccountForIgniteBundleBuy;
	public static AccountData tc59_saiforIgniteBundle;
	public static AccountData solarisConsumerGWPDigitalTV;
	public static AccountData solarisConsumerGWPInternetDTV;
	public static AccountData solarisConsumerGWPRhpDtv ;
	public static AccountData solarisConsumerGWPShmDtv;
	public static AccountData solarisConsumerGWPDtvWireless;
	public static AccountData solarisConsumerGWPLegacyInternet;
	public static AccountData solarisConsumerGWPInternetandRHP;
	public static AccountData solarisConsumerGWPInternetSHM;
	public static AccountData solarisConsumerGWPRhp;
	public static AccountData solarisConsumerGWPRhpShm;
	public static AccountData solarisHTOMigrationSignIn;
	public static AccountData ChangeTvViaServiceability;
	public static AccountData TC023_TVPackageDowngrade;
	public static AccountData TC026_TVPackageUpgrade;
	public static AccountData TC028_InternetPackageDowngrade;
	public static AccountData tupeloDowngradeTest;
	public static AccountData tupeloUpgradeTest;
	public static AccountData TC032_SAI_AddingSmartStream;
	public static AccountData TC030_Internet_PackageUpgrade;
	public static RedesignRpotgData tc01NACTermNpotgSS;
	public static RedesignRpotgData tc02NACNoTermStandardShipping;
	public static RedesignRpotgData tc03NACTermPotgShipping;
	public static RedesignRpotgData tc04NACTermBopis;
	public static RedesignRpotgData tc05NACByodSS;
	public static RedesignRpotgData tc06NACByodTermBopis;
	public static RedesignRpotgData tc28_RPP_NACTermPotgShipping;
	public static RedesignRpotgData tc29_RPP_NACByod_StdShipping_QCProvince;
	public static RedesignRpotgOVData buyFlowsOVtestCase14;
	public static RedesignRpotgOVData buyFlowsOVtestCase15;
	public static RedesignRpotgOVData buyFlowsOVtestCase16;
	public static RedesignRpotgOVData buyFlowsOVtestCase17;
	public static RedesignRpotgOVData buyFlowsOVtestCase18;
	public static RedesignRpotgOVData buyFlowsOVtestCase19;
	public static RedesignRpotgOVData buyFlowsOVtestCase20;
	public static RedesignRpotgOVData buyFlowsOVtestCase21;
	public static RedesignRpotgOVData buyFlowsOVtestCase22;
	public static RedesignRpotgOVData tc23SOHONACBYODNonShareBopis;
	public static HUPData buyFlowsOVtestCase25;
	public static HUPData buyFlowsOVtestCase26;
	public static HUPData buyFlowsOVtestCase27;
	public static HUPData buyFlowsOVtestCase28;
	public static HUPData buyFlowsOVtestCase29;
	public static HUPData buyFlowsOVtestCase30;
	public static HUPData buyFlowsOVtestCase31;
	public static HUPData buyFlowsOVtestCase32;
	public static HUPData buyFlowsOVtestCase33;
	public static HUPData buyFlowsOVtestCase34;
	public static LoginDetails bfaOneViewLogin;
	public static PPCData tc21PPCSLNonSEDTTPlan;
	public static PPCData tc22PPCMLNonSESubsidyPlan;
	public static PPCData tc23PPCMLNonSESharedGroupDTTPlan;
	public static PPCData tc24PPCSLSEBYODPlan;
	public static PPCData tc25PPCMLSESubsidyPlanToDTTPLan;
	public static PPCData tc26PPCMLSEAdditionalLineDTTPlan;
	public static PPCData tc27PPCSLNonSEFinToTTPlan;
	public static PPCData tc32_RPP_PPC_SL_FinToBYOD_DowngradeFee;
	public static PPCData tc33_RPP_PPC_ML_SE_SelectingDTTPlanOnMainLine;
	public static PPCData tc34_RPP_PPC_ML_SE_BYODToBYODPlanOnAdditionalLine;
	public static PPCData tc44_SOHO_PPC_SL_NS_TTPlanToDTTPlan;
	public static PPCData tc45_SOHO_PPC_ML_SE_DTTPlanToBYODOnMainLine_DownGradeFee;
	public static PPCData tc46_SOHO_PPC_ML_BYODPlanToDTTPlanOnAdditionalLine;
	public static PPCData BFA_ProdTest_tc06_PPC_FinancingPlan;
	public static RedesignRpotgData tc38_SOHO_NACTermMediumRiskUEOptionPOTG;
	public static HUPData tc07HupPpcPotgSharedML;
	public static HUPData tc08HUPAdditionalLine;
	public static HUPData tc09HUPNpotgML;
	public static HUPData tc10HUPNonShareNoTermSL;
	public static HUPData tc11HUPShareNoTermSL;
	public static HUPData tc12HUPWithPPC_MultipleFinAccessoriesML;
	public static HUPData tc13HUPNonShareKeepCurrentPlanSL;
	public static HUPData tc14HUPShareTermBopisML;
	public static HUPData tc40_SOHO_HUP_MediumRisk_KeepCurrentPlan_Bopis;
	public static HUPData tc41_SOHO_HUP_ML_SE_HUPWithPPCOnMainLine_VDP_POTG;
	public static HUPData tc42_SOHO_HUP_ML_SE_HUPWithPPCOnAdditionalLine_StdShip;
	public static HUPData tc43_SOHO_HUP_SL_HUP_NOTERM_KEP_StdShip;
	public static HUPData tc35_RPP_HUPWithPPC_SL_SE_MediumRisk_Financing_VDP_POTG;
	public static HUPData tc36_RPP_HUP_ML_SE_HUPOnAdditionalLineByKEP_BOPIS;
	public static HUPData tc37_RPP_HUP_ML_HUP_NOTERM_KEPOnMainLine_StdShip;
	public static HUPData BFA_ProdTest_tc05_HUPWithPPC_StdShipping;
	public static AALData tc15AALShareTermBopis;
	public static AALData tc16AALFinPlanPotgShipping;
	public static AALData tc17AALNoTermStandardShipping;
	public static AALData tc18AALTermTablet;
	public static AALData tc19AALBYODBopisShipping;
	public static AALData tc39_SOHO_AALBYODStandardShipping;
	public static AALData tc20AALTermMLNonSEBasicPlanStdShipping;
	public static AALData tc30_RPP_AALTERM_VDP_UpfronEdge_BOPIS;
	public static AALData tc31_RPP_AALBYODStdShipping;
	public static AALData BFA_ProdTest_tc02_AALTERM_FinancingPlanPotg;
	public static AALData BFA_ProdTest_tc03_AALBYOD_StdShipping;
	public static AALData BFA_ProdTest_tc04_AALTERM_Tablet_StdShipping;
	public static HUPData buyFlowsOVtestCase01;
	public static HUPData buyFlowsOVtestCase02;
	public static HUPData buyFlowsOVtestCase05;
	public static HUPData buyFlowsOVtestCase06;
	public static PPCData buyFlowsOVtestCase03;
	public static PPCData buyFlowsOVtestCase04;
	public static PPCData buyFlowsOVtestCase07;
	public static AALOVData buyFlowsOVtestCase08;
	public static AALOVData buyFlowsOVtestCase09;
	public static AALOVData buyFlowsOVtestCase10;
	public static AALOVData buyFlowsOVtestCase11;
	public static AALOVData buyFlowsOVtestCase12;
	public static AALOVData buyFlowsOVtestCase13;
	public static SauceSettings sauceSettings;
	public static AccountData igniteTVParentalcontrols;
	public static AccountData solarisAccount;
	public static AccountData solarisTV;
	public static ContactData anonymousData;
	public static ContactData nacTMP;
	public static MigrationData migrationData;
	public static MigrationData migrationDataToSAI;
	public static MigrationData migrationData1PTo2P;
	public static MigrationData migrationData1PTo3P;
	public static MigrationData migrationDataToISS;
	public static MigrationData migrationData3PSameNumber;
	public static MigrationData migrationData1PRHPTo3P;
	public static MigrationData addChannelImmediate;
	public static MigrationData addThemepackImmediate;
	public static MigrationData addRemoveThemepackImmediate;
	public static MigrationData addChannelAndThempackImmediate;
	public static MigrationData targetedMigration1PInternetToSAI;
	public static MigrationData targetedMigration1PInternetToSAIISS;
	public static MigrationData targetedMigration1PInternetTo2P;
	public static MigrationData targetedMigration1PInternetTo3P;
	public static MigrationData targetedMigration1PTvToSAIISS;
	public static MigrationData targetedMigration1PTvTo2P;
	public static MigrationData targetedMigration1PTvTo3P;
	public static MigrationData targetedMigration2PInternetAndTVTo2P;
	public static MigrationData targetedMigration2PInternetAndTVTo3P;
	public static MigrationData targetedMigration2PInternetAndTVToSAI;
	public static MigrationData targetedMigration2PInternetAndTVToSAIISS;
	public static MigrationData targetedMigration3PtoSAIISS;
	public static MigrationData targetedMigration_3P_to_2P;
	public static MigrationData targetedMigration_3P_to_3P_same_numb;
	public static MigrationData targetedMigration_3P_to_3P_change_numb;
	public static PaymentDetails ovPaymentInfo;
	public static AccountData tc60;
	public static RedesignConfig redesignConfig;
	public static AccountData tc40SHMAccount;
	public static AccountData tc47TupeloAccount;
	public static AccountData tc43IgniteRHP;
	public static AccountData tc44DigitalTVAccount;
	public static AccountData tc45LegacyInternetAccount;
	public static AccountData tc46LegacyRHP;
	public static AccountData tc53_iHPAccount;
	public static AccountData shmAccount;
	public static AccountData tupeloAccount;
	public static Config bfaOneViewConfig;
	public static PaymentDetails bfaOneViewPaymentInfo;
	public static AccountData tc0610;
	public static Config rogersConfig;
	public static AccountData tc01030405;
	public static AccountData tc92;
	public static AccountData tc95;
	public static AccountData tc90;
	public static AccountData tc5398;
	public static AccountData tc94;
	public static AccountData tc101;
	public static AccountData tc102;
	public static AccountData tc103;
	public static AccountData tc100;
	public static AccountData tc99;
	public static Config searchCBSConfig;
	public static AccountData tc104;
	public static AccountData tc22;
	public static AccountData tc23;
	public static AccountData tc111;
	public static AccountData tc112;
	public static AccountData tc01FinanceNotPaidOff_ON;
	public static AccountData tc37_NoBills;
	public static  AccountData tc118;
	public static AccountData tc124;
	public static AccountData tc126;
    public static AccountData tc123;
	public static AccountData tc125;
	public static AccountData tc129;
	public static AccountData tc130;
	public static AccountData tc134;
	public static AccountData tc136;
	public static AccountData tc137;
	public static AccountData tc138;
	public static AccountData tc139;
	public static AccountData RHPManage_AddOns;
	public static AccountData SUS_15702_TC01_Validation_Of_CallerID;
	public static AccountData SUS_16553_TC01_Validation_of_Exchange_Flex_Channels_Existing_Customer;
	public static OvrReusableData ovrReusableData;
	public static OvrReusableData ovrMigrationData2PInternetAndTvTo2P;
	public static OvrReusableData ovrMigrationData3PTo3PATL;
	public static OvrReusableData ovrMigrationData3PTo3PON;
	public static OvrReusableData ovrWirelessNacATL;
	public static  OvrReusableData ovrWirelessNacON;
	public static OvrReusableData ovrMigrationData1pINTtoISSATL;
	public static OvrConfigData ovrConfigData;
	public static OvrReusableData legacy1PtoNac3pNewAddress;
	public static OvrReusableData existingIgniteCxToNac3pON;
	public static OvrReusableData existingIgnite3PtoNac2pON;
	public static OvrReusableData ovrMigrationData1Pto2PAddPods;
	public static OvrReusableData ovrMigrationData1pINTto2pTVINTAddPods;
	public static  AccountData RemoveThemepack1544Tc03;
	public static AccountData InternetDashboardSupportLinks;
	public static AccountData ChangePaymentMethod;
	public static AccountData User_New_Profile_Creation;
	public static AccountData Make_a_Payment_EN;
	public static AccountData Oasys_Gap_Closure_Change_Internet_via_Serviceability_Model;
	public static AccountData ViewBill;
	public static AccountData IPTVDasboad_MulitplsSTB;
	public static AccountData IgniteOffers_SAI_Adding_ISS;
	public static AccountData IgniteOffersChangeTV_INTpackage;
	public static AccountData Chargeable_pods;

	public static void dataInit (List<ITestNGMethod> lstTestMethodName) throws FileNotFoundException {
 		sauceSettings = YamlHandler.getSauceSettings("/test-data/rogers/SauceSettings.yml");

		String strTestMethodName = lstTestMethodName.toString();
		boolean match = false;
		if(strTestMethodName.contains("connectedhome.") || strTestMethodName.contains("solarisconsumer.")) {
			//HSI Fido Data files
			connectedHomeDataInit();
			match = true;
		}
		if(strTestMethodName.contains("selfserve.")) {
			//Self-Service Data files
			selfserveDataInit();
			match = true;
		}
		if(strTestMethodName.contains("buyflows.")) {
			//Buy-Flows Data files
			buyFlowsDataInit();
			match = true;
		}
		if(strTestMethodName.contains("buyflowsoneview.")) {
			//Buy-Flows Data files
			buyFlowsOneViewDataInit();
			match = true;
		}
		if(strTestMethodName.contains("choneview.")) {
			//Buy-Flows Data files
			chOneViewDataInit();
			match = true;
		}
		if(strTestMethodName.contains("search.")||strTestMethodName.contains("serviceability.")) {
			//No yaml data files to initialize
			match = true;
		}
		if(strTestMethodName.contains("ovr.")){
			//OVR Data files
			ovrDataInit();
			match = true;
		}
		if (!match) {
			//All Data files
			connectedHomeDataInit();
			selfserveDataInit();
			buyFlowsDataInit();
			chOneViewDataInit();
			buyFlowsOneViewDataInit();
		}
	}
	
	private static void connectedHomeDataInit() throws FileNotFoundException {
      	chPaymentInfo = YamlHandler.getCablePaymentDetails();
		rogersConfig = YamlHandler.getBFAConfig();

      	//Digital TV test data
		tc51_igniteSmartStream = YamlHandler.getCableAccountData("TC51_IgniteSmartStream");
    	tc43_44_digitalTVAccount = YamlHandler.getCableAccountData("TC43_44_DigitalTVAccount");
    	tc38_DigitalTVUpgradeToIgnite = YamlHandler.getCableAccountData("TC38_DigitalTVUpgradeToIgnite");
    	tc45_digitalTVAccountUpgradePackage = YamlHandler.getCableAccountData("TC45_DigitalTVAccountUpgradePackage");
    	tc34_NoPortInAbondoneFlows = YamlHandler.getCableAccountData("TC34_NoPortInAbondoneFlows");
    	solarisConsumerNoPortinCartAbandon= YamlHandler.getCableAccountData("SolarisConsumerNoPortinCartAbandon");
		solarisConsumerPortInCartAbandon=YamlHandler.getCableAccountData("SolarisConsumerPortInCartAbandon");
		solarisConsumerGWPDigitalTV=YamlHandler.getCableAccountData("solarisConsumerGWPDigitalTV");
		solarisConsumerGWPInternetDTV=YamlHandler.getCableAccountData("solarisConsumerGWPInternetDTV");
		solarisConsumerGWPShmDtv = YamlHandler.getCableAccountData("solarisConsumerGWPDTVSHM");
		solarisConsumerGWPRhpDtv = YamlHandler.getCableAccountData("solarisConsumerGWPDTVRHP");
		solarisConsumerGWPDtvWireless = YamlHandler.getCableAccountData("solarisConsumerGWPDtvWireless");
		solarisConsumerGWPLegacyInternet = YamlHandler.getCableAccountData("solarisConsumerGWPLegacyInternet");
		solarisConsumerGWPInternetandRHP = YamlHandler.getCableAccountData("solarisConsumerGWPInternetandRHP");
		solarisConsumerGWPInternetSHM = YamlHandler.getCableAccountData("solarisConsumerGWPInternetSHM");
		solarisConsumerGWPRhp = YamlHandler.getCableAccountData("solarisConsumerGWPRhp");
		solarisConsumerGWPRhpShm = YamlHandler.getCableAccountData("solarisConsumerGWPRhpShm");
		tc29_IgniteServiceabilityAddressNB=YamlHandler.getCableAccountData("TC29_IgniteServiceabilityAddressNB");
		tc92_2L7ContractType3PBulkTenant=YamlHandler.getCableAccountData("TC92_2L7ContractType3PBulkTenant");
		tc98_RogersSHM_NB=YamlHandler.getCableAccountData("TC98_RogersSHM_NB");
		tc102_IPTVAccount=YamlHandler.getCableAccountData("TC102_IPTVAccount");

		//Legacy Internet test data
		tc46_legacyInternetAccount = YamlHandler.getCableAccountData("TC46_LegacyInternetAccount");
		tc62_wirelessSignedInInternetBuy = YamlHandler.getCableAccountData("TC62_WirelessSignedInInternetBuy");
		tc57_sHMSignedInInternetBuy = YamlHandler.getCableAccountData("TC57_SHMSignedInInternetBuy");
		tc58_saiAccountForIgniteBundleBuy = YamlHandler.getCableAccountData("TC58_SaiAccountForIgniteBundleBuy");
		tc59_saiforIgniteBundle = YamlHandler.getCableAccountData("TC59_SAIforIgniteBundle");
		tc82_Legacy1PtoIgnite2P= YamlHandler.getCableAccountData("TC82_Legacy1PtoIgnite2P");
		tc110_StandaloneInternetAccount = YamlHandler.getCableAccountData("TC110_StandaloneInternetAccount");
		tc83_Legacy2PtoIgnite2P= YamlHandler.getCableAccountData("TC83_Legacy2PtoIgnite2P");
		tc87_NativeTNcourierFulfilmentHot= YamlHandler.getCableAccountData("TC87_NativeTNcourierFulfilmentHot");
		tc88_Legacy2PTVIntToIgnite3P= YamlHandler.getCableAccountData("TC88_Legacy2PTVIntToIgnite3P");
		tc89_Legacy3pToIgnite3P= YamlHandler.getCableAccountData("TC89_Legacy3pToIgnite3P");
		tc90_Legacy1PTVtoIgnite2P= YamlHandler.getCableAccountData("TC90_Legacy1PTVtoIgnite2P");
		//RHP test data
		tc48_legacyRHP = YamlHandler.getCableAccountData("TC48_LegacyRHP");
    	tc42_igniteRHP = YamlHandler.getCableAccountData("TC42_IgniteRHP");
    	tc27_28_RogersSHM = YamlHandler.getCableAccountData("TC27_28_RogersSHM");
    	solarisMultipleSubscriptions = YamlHandler.getCableAccountData("SolarisMultipleSubscriptions");
		tc53_iHPAccount = YamlHandler.getCableAccountData("TC53_IHPAccount");
    	//Ignite Internet test data
		tcm06_IgniteTVAccount=YamlHandler.getCableAccountData("TCM06_IgniteTVAccount");
		tcm04_SolarisInternetAccount = YamlHandler.getCableAccountData("TCM04_SolarisInternetAccount");
    	tc16_17_18_19_SolarisInternetAccount = YamlHandler.getCableAccountData("TC16_17_18_19_SolarisInternetAccount");
    	tc37_internetAccountUpgrade   = YamlHandler.getCableAccountData("TC37_InternetAccountUpgrade");
		tc23_24_standaloneInternetAccountforUpgrade   = YamlHandler.getCableAccountData("TC23_24_StandaloneInternetAccountforUpgrade");
    	tc15_SolarisInternetAccountWithUsage = YamlHandler.getCableAccountData("TC15_SolarisInternetAccountWithUsage");
		tc20_SolarisInternetAccountForUpgrade = YamlHandler.getCableAccountData("TC20_SolarisInternetAccountForUpgrade");
    	tc22_StandaloneInternetAccountWithUsage = YamlHandler.getCableAccountData("TC22_StandaloneInternetAccountWithUsage");
		tc21_SolarisInternetOldConstructor = YamlHandler.getCableAccountData("TC21_SolarisInternetOldConstructor");
    	solarisInternetPackageChange = YamlHandler.getCableAccountData("SolarisInternetPackageChange");
    	tc31_SolarisInternetAccountWithUsageAndPackageUpgrade = YamlHandler.getCableAccountData("TC31_SolarisInternetAccountWithUsageAndPackageUpgrade");
		tc54_iginteTVWirelessCRMaddressMismatchWithSGI=YamlHandler.getCableAccountData("TC54_IginteTVWirelessCRMaddressMismatchWithSGI");
		tc55_rCISandECIDLowRiskMediumRiskAddressRetry=YamlHandler.getCableAccountData("TC55_RCISandECIDLowRiskMediumRiskAddressRetry");
		tc60_WirelessSignedInInternetBuyDiffAddress=YamlHandler.getCableAccountData("TC60_WirelessSignedInInternetBuyDiffAddress");
		tc61_SHMSignedInInternetBuyDiffAddress=YamlHandler.getCableAccountData("TC61_SHMSignedInInternetBuyDiffAddress");
		tc56_WirelessSignedInInternetBuyBasement=YamlHandler.getCableAccountData("TC56_WirelessSignedInInternetBuyBasement");
		tc63_ShmSignedInInternetBuyBasement=YamlHandler.getCableAccountData("TC63_ShmSignedInInternetBuyBasement");
		tc93_FWACappedPlan=YamlHandler.getCableAccountData("TC93_FWACappedPlan");
		//Ignite TV test data
		tcm05_SolarisTVAccountForUpgrade  = YamlHandler.getCableAccountData("TCM05_SolarisTVAccountForUpgrade");
		tc35_CRMaddressMismatchWithSGI = YamlHandler.getCableAccountData("TC35_CRMaddressMismatchWithSGI");
		tc01_02_03_IgniteTVAccount = YamlHandler.getCableAccountData("TC01_02_03_IgniteTVAccount");
		tc05_IgniteTV4Plus1Account = YamlHandler.getCableAccountData("TC05_IgniteTV4Plus1Account");
    	tc04_07_SolarisTVAccount = YamlHandler.getCableAccountData("TC04_07_SolarisTVAccount");
    	tc39_40_SolarisPortinFlows = YamlHandler.getCableAccountData("TC39_40_SolarisPortinFlows");
    	tc14_solarisTVAccountStarterPackage = YamlHandler.getCableAccountData("TC14_SolarisTVAccountStarterPackage");
    	tc14_SolarisTVAccountFlex5Package = YamlHandler.getCableAccountData("TC14_SolarisTVAccountFlex5Package");
    	tc14_solarisTVAccountPopularPackage = YamlHandler.getCableAccountData("TC14_SolarisTVAccountPopularPackage");
    	tc09_SolarisTVAccountForUpgrade = YamlHandler.getCableAccountData("TC09_SolarisTVAccountForUpgrade");
    	tc10_SolarisTVAccountForUpgradeON = YamlHandler.getCableAccountData("TC10_SolarisTVAccountForUpgradeON");
    	tc12_SolarisTVAccountForUpgradeNL = YamlHandler.getCableAccountData("TC12_SolarisTVAccountForUpgradeNL");
    	tc11_SolarisTVAccountForUpgradeNB = YamlHandler.getCableAccountData("TC11_SolarisTVAccountForUpgradeNB");
    	tc08_SolarisTVOldConstructor = YamlHandler.getCableAccountData("TC08_SolarisTVOldConstructor");
    	solarisTVAccountPackageUpgrade = YamlHandler.getCableAccountData("SolarisTVPackageChange");
    	tc13_SolarisChangeTVPackageAdd4KChannelsAndThemePack = YamlHandler.getCableAccountData("TC13_SolarisChangeTVPackageAdd4KChannelsAndThemePack");
    	tc06_2_SolarisChangeTVManageChannels = YamlHandler.getCableAccountData("TC06_2_SolarisChangeTVManageChannels");
    	tc06_1_SolarisChangeTVManageThemePacks = YamlHandler.getCableAccountData("TC06_1_SolarisChangeTVManageThemePacks");
    	solarisHTOMigrationSignIn = YamlHandler.getCableAccountData("SolarisHTOMigrationSignIn");
		tc65_IgniteSmartStreamNL= YamlHandler.getCableAccountData("TC65_IgniteSmartStreamNL");
		tc73_IgniteTVAccountMultipleSwap= YamlHandler.getCableAccountData("TC73_IgniteTVAccountMultipleSwap");
		tc74_SaiBaseLineHomeAddress= YamlHandler.getCableAccountData("TC74_SaiBaseLineHomeAddress");
		tc75_IgniteTVBaseLineHomeAddress= YamlHandler.getCableAccountData("TC75_IgniteTVBaseLineHomeAddress");
		tc76_Legact2Pto3PIgniteBasementHousePortinHot= YamlHandler.getCableAccountData("TC76_Legact2Pto3PIgniteBasementHousePortinHot");
		}
	
	private static void selfserveDataInit() throws FileNotFoundException {
		bdConnection = YamlHandler.getDBConnection();
    	ssConfig =  YamlHandler.getSSConfig();
    	//sauceSettings = YamlHandler.getSauceSettings("/test-data/rogers/selfserve/SauceSettings.yml");
    	paymentInfo = YamlHandler.getSSPaymentDetails();
    	tc013132 = YamlHandler.getSSAccountData("tc01_31_32Postpaid");
    	tc0224 = YamlHandler.getSSAccountData("tc02_24PostpaidLostStolen");
    	tc041139 = YamlHandler.getSSAccountData("tc04_11_39PostpaidLinkAccount");
    	tc060809 = YamlHandler.getSSAccountData("tc06_08_09RecoveryBySMS");
    	tc1314 = YamlHandler.getSSAccountData("tc13_14PostPaidWithSIM");
    	tc161825 = YamlHandler.getSSAccountData("tc16_18_25PostpaidPayment");
    	tc1920 = YamlHandler.getSSAccountData("tc19_20PostpaidPayment");
    	tc2751 = YamlHandler.getSSAccountData("tc27_51PostpaidWithVoicemail");
    	tc36 = YamlHandler.getSSAccountData("tc36PostpaidWithBill");
    	tc495271 = YamlHandler.getSSAccountData("tc49_52_71NSE");
    	tc5074 = YamlHandler.getSSAccountData("tc50_74InfiniteSE(Demoline)");
    	tc54 = YamlHandler.getSSAccountData("tc54NSEwithUnlimitedTTOnlyPlan");
    	tc55 = YamlHandler.getSSAccountData("tc55NSEwithLimitedTTOnlyPlan");
    	tc56 = YamlHandler.getSSAccountData("tc56NSEwithDataOnlyPlan");
    	tc57 = YamlHandler.getSSAccountData("tc57NSEwDataUnlimitedTTPlan");
    	tc58 = YamlHandler.getSSAccountData("tc58NSEwDataLimitedTTPlan");
    	tc59 = YamlHandler.getSSAccountData("tc59NSEwDataUnlimitedTTPlanRunningLow");
    	tc61 = YamlHandler.getSSAccountData("tc61SEPlanRunningLow(Demoline)");
    	tc6269 = YamlHandler.getSSAccountData("tc62_69InfiniteSE(Demoline)");
    	tc63 = YamlHandler.getSSAccountData("tc63NSEindividualRunningLow");
    	tc64 = YamlHandler.getSSAccountData("tc64InfiniteNSEReducedSpeed");
    	tc6577 = YamlHandler.getSSAccountData("tc65_77InfiniteNSE");
    	tc727375 = YamlHandler.getSSAccountData("tc72_73_75NSE");
    	tc02 = YamlHandler.getSSAccountData("tc02_PreRegister");
    	tc07 = YamlHandler.getSSAccountData("tc07RecoverUsernameByEmail");
    	tc67 = YamlHandler.getSSAccountData("tc67InfiniteSEReducedSpeed(Demoline)");    
    	tc7681 = YamlHandler.getSSAccountData("tc76_81SEPlanWith6Ctns(Demoline)"); 
    	tc78 = YamlHandler.getSSAccountData("tc78NSESingleLine");    	    	
    	tc60 = YamlHandler.getSSAccountData("tc60SEMultipleCTN");
    	tc80 = YamlHandler.getSSAccountData("TC80NSEwOverage");
    	tc82 = YamlHandler.getSSAccountData("tc82InfiniteSE");
    	tc01030405 =  YamlHandler.getSSAccountData("tc01_03_04_05_FDMInfiniteSE");
    	tc92 = YamlHandler.getSSAccountData("tc92_CancelledInfiniteNSE");
    	tc94 = YamlHandler.getSSAccountData("tc94CreditLimitExceededAccountSEInfinite");
    	tc95 = YamlHandler.getSSAccountData("tc95NSESuspendedCTN");
    	tc90 = YamlHandler.getSSAccountData("tc90_SE_NSE_ResidentialServices");
    	tc5398 = YamlHandler.getSSAccountData("tc53_98PrepaidAccount");
    	tc99 = YamlHandler.getSSAccountData("tc99SohoMultipleAccounts");
    	tc100 = YamlHandler.getSSAccountData("tc100InfiniteNSESohoCustomer");
    	tc101 = YamlHandler.getSSAccountData("tc101InfiniteSESohoCustomer");
    	tc102 = YamlHandler.getSSAccountData("tc102NSEInfinite50Cancellation");
    	tc103 = YamlHandler.getSSAccountData("tc103Infinite20Redeem");
    	tc104 = YamlHandler.getSSAccountData("tc104Infinite10RedeemCancel");
    	tc22 = YamlHandler.getSSAccountData("tc22_PreRegister_Auto");
    	tc23 = YamlHandler.getSSAccountData("tc23_PreRegister_Auto");
		tc01FinanceNotPaidOff_ON = YamlHandler.getSSAccountData("tc01_FinanceNotPaidOff_ON");
    	tc124 = YamlHandler.getSSAccountData("tc124FinancePaidOffUpfrontEdgeNotPaidON");
    	//================ Connected home =========================
    	tc43IgniteRHP = YamlHandler.getSSAccountData("tc43IgniteRHP");
    	tc42SolarisInternetAccountWithUsage = YamlHandler.getSSAccountData("tc42SolarisInternetAccountWithUsage");
    	tc41IgniteTVAccount = YamlHandler.getSSAccountData("tc41IgniteTVAccount");
    	tc44DigitalTVAccount = YamlHandler.getSSAccountData("tc44DigitalTVAccount");
    	tc46LegacyRHP = YamlHandler.getSSAccountData("tc46LegacyRHP");
    	tc45LegacyInternetAccount = YamlHandler.getSSAccountData("tc45LegacyInternetAccount");
    	tc40SHMAccount = YamlHandler.getSSAccountData("tc40SHMAccount");
    	tc47TupeloAccount = YamlHandler.getSSAccountData("tc47TupeloAccount");
    	tc0610 = YamlHandler.getSSAccountData("tc06_10DemolineSEPlanMultiLine");
		tc111 = YamlHandler.getSSAccountData("tc111PTPdeliquent");
		tc112 = YamlHandler.getSSAccountData("tc112PTPdeliquent");
		tc37_NoBills =YamlHandler.getSSAccountData("tc37PostpaidWithNoBill");
		tc118 = YamlHandler.getSSAccountData("tc118SEInfinite50ImmediateCancel");
		tc126 = YamlHandler.getSSAccountData("tc126NSEPlanAddAccessories");
		tc123 = YamlHandler.getSSAccountData("tc123DeviceSubsidy_BC");
		tc125 = YamlHandler.getSSAccountData("tc125UserWithBYODDevice_ON");
		tc129 = YamlHandler.getSSAccountData("tc129SubsidyPaisOff");
		tc130 = YamlHandler.getSSAccountData("tc130PSEFsubscribeNSEInfinte50");
		tc134 =YamlHandler.getSSAccountData("tc134PSEFDPRedeemedActiveAndCancalledMLBAN");
		tc136 = YamlHandler.getSSAccountData("tc136PSEF_DP_AM_RedemptionSingleAc");
		tc137 = YamlHandler.getSSAccountData("tc137PSEF_CTNRedemptionforDP_ThenAM_MultipleAC");
		tc138 = YamlHandler.getSSAccountData("tc138PSEF_CTNCancelnforDPMultiBANCTNsSE_NSEInfiniteRedeemedTheSameCTNForAMandDP");
		tc139 = YamlHandler.getSSAccountData("tc139PSEF_MultipleBANCTNs_SE_NSEInfinite_RedeemedCTNforAMandEligibleCTNforDP");
	}
	
	private static void buyFlowsDataInit() throws FileNotFoundException {
		rogersConfig = YamlHandler.getBFAConfig();
		bfaConfig =  YamlHandler.getBFAConfig();
		bfaPaymentInfo = YamlHandler.getBFAPaymentDetails();
		tc01NACTermNpotgSS=YamlHandler.getRedesignNACData("tc01NACTermNpotgSS");
		tc02NACNoTermStandardShipping=YamlHandler.getRedesignNACData("tc02NACNoTermStandardShipping");
		tc03NACTermPotgShipping = YamlHandler.getRedesignNACData("tc03NACTermPotgShipping");
		tc04NACTermBopis = YamlHandler.getRedesignNACData("tc04NACTermBopis");
		tc05NACByodSS = YamlHandler.getRedesignNACData("tc05NACByodSS");
		tc06NACByodTermBopis = YamlHandler.getRedesignNACData("tc06NACByodTermBopis");
		tc07HupPpcPotgSharedML = YamlHandler.getHUPdata("tc07HupPpcPotgSharedML");
		tc08HUPAdditionalLine = YamlHandler.getHUPdata("tc08HUPAdditionalLine");
		tc09HUPNpotgML = YamlHandler.getHUPdata("tc09HUPNpotgML");
		tc10HUPNonShareNoTermSL = YamlHandler.getHUPdata("tc10HUPNonShareNoTermSL");
		tc11HUPShareNoTermSL = YamlHandler.getHUPdata("tc11HUPShareNoTermSL");
		tc12HUPWithPPC_MultipleFinAccessoriesML = YamlHandler.getHUPdata("tc12HUPWithPPC_MultipleFinAccessoriesML");
		tc13HUPNonShareKeepCurrentPlanSL = YamlHandler.getHUPdata("tc13HUPNonShareKeepCurrentPlanSL");
		tc14HUPShareTermBopisML = YamlHandler.getHUPdata("tc14HUPShareTermBopisML");
		tc15AALShareTermBopis = YamlHandler.getAALdata("tc15AALShareTermBopis");
		tc16AALFinPlanPotgShipping = YamlHandler.getAALdata("tc16AALFinPlanPotgShipping");
		tc17AALNoTermStandardShipping = YamlHandler.getAALdata("tc17AALNoTermStandardShipping");
		tc18AALTermTablet = YamlHandler.getAALdata("tc18AALTermTablet");
		tc19AALBYODBopisShipping = YamlHandler.getAALdata("tc19AALBYODBopisShipping");
		tc20AALTermMLNonSEBasicPlanStdShipping = YamlHandler.getAALdata("tc20AALTermMLNonSEBasicPlanStdShipping");
		tc21PPCSLNonSEDTTPlan = YamlHandler.getPPCdata("tc21PPCSLNonSEDTTPlan");
		tc22PPCMLNonSESubsidyPlan = YamlHandler.getPPCdata("tc22PPCMLNonSESubsidyPlan");
		tc23PPCMLNonSESharedGroupDTTPlan = YamlHandler.getPPCdata("tc23PPCMLNonSESharedGroupDTTPlan");
		tc24PPCSLSEBYODPlan = YamlHandler.getPPCdata("tc24PPCSLSEBYODPlan");
		tc25PPCMLSESubsidyPlanToDTTPLan = YamlHandler.getPPCdata("tc25PPCMLSESubsidyPlanToDTTPLan");
		tc26PPCMLSEAdditionalLineDTTPlan = YamlHandler.getPPCdata("tc26PPCMLSEAdditionalLineDTTPlan");
		tc27PPCSLNonSEFinToTTPlan = YamlHandler.getPPCdata("tc27PPCSLNonSEFinToTTPlan");
		tc28_RPP_NACTermPotgShipping = YamlHandler.getRedesignNACData("tc28_RPP_NACTermPotgShipping");
		tc29_RPP_NACByod_StdShipping_QCProvince = YamlHandler.getRedesignNACData("tc29_RPP_NACByod_StdShipping_QCProvince");
		tc30_RPP_AALTERM_VDP_UpfronEdge_BOPIS = YamlHandler.getAALdata("tc30_RPP_AALTERM_VDP_UpfronEdge_BOPIS");
		tc31_RPP_AALBYODStdShipping = YamlHandler.getAALdata("tc31_RPP_AALBYODStdShipping");
		tc32_RPP_PPC_SL_FinToBYOD_DowngradeFee = YamlHandler.getPPCdata("tc32_RPP_PPC_SL_FinToBYOD_DowngradeFee");
		tc33_RPP_PPC_ML_SE_SelectingDTTPlanOnMainLine = YamlHandler.getPPCdata("tc33_RPP_PPC_ML_SE_SelectingDTTPlanOnMainLine");
		tc34_RPP_PPC_ML_SE_BYODToBYODPlanOnAdditionalLine = YamlHandler.getPPCdata("tc34_RPP_PPC_ML_SE_BYODToBYODPlanOnAdditionalLine");
		tc35_RPP_HUPWithPPC_SL_SE_MediumRisk_Financing_VDP_POTG = YamlHandler.getHUPdata("tc35_RPP_HUPWithPPC_SL_SE_MediumRisk_Financing_VDP_POTG");
		tc36_RPP_HUP_ML_SE_HUPOnAdditionalLineByKEP_BOPIS = YamlHandler.getHUPdata("tc36_RPP_HUP_ML_SE_HUPOnAdditionalLineByKEP_BOPIS");
		tc37_RPP_HUP_ML_HUP_NOTERM_KEPOnMainLine_StdShip = YamlHandler.getHUPdata("tc37_RPP_HUP_ML_HUP_NOTERM_KEPOnMainLine_StdShip");
		tc38_SOHO_NACTermMediumRiskUEOptionPOTG = YamlHandler.getRedesignNACData("tc38_SOHO_NACTermMediumRiskUEOptionPOTG");
		tc39_SOHO_AALBYODStandardShipping = YamlHandler.getAALdata("tc39_SOHO_AALBYODStandardShipping");
		tc40_SOHO_HUP_MediumRisk_KeepCurrentPlan_Bopis = YamlHandler.getHUPdata("tc40_SOHO_HUP_MediumRisk_KeepCurrentPlan_Bopis");
		tc41_SOHO_HUP_ML_SE_HUPWithPPCOnMainLine_VDP_POTG = YamlHandler.getHUPdata("tc41_SOHO_HUP_ML_SE_HUPWithPPCOnMainLine_VDP_POTG");
		tc42_SOHO_HUP_ML_SE_HUPWithPPCOnAdditionalLine_StdShip = YamlHandler.getHUPdata("tc42_SOHO_HUP_ML_SE_HUPWithPPCOnAdditionalLine_StdShip");
		tc43_SOHO_HUP_SL_HUP_NOTERM_KEP_StdShip = YamlHandler.getHUPdata("tc43_SOHO_HUP_SL_HUP_NOTERM_KEP_StdShip");
		tc44_SOHO_PPC_SL_NS_TTPlanToDTTPlan = YamlHandler.getPPCdata("tc44_SOHO_PPC_SL_NS_TTPlanToDTTPlan");
		tc45_SOHO_PPC_ML_SE_DTTPlanToBYODOnMainLine_DownGradeFee = YamlHandler.getPPCdata("tc45_SOHO_PPC_ML_SE_DTTPlanToBYODOnMainLine_DownGradeFee");
		tc46_SOHO_PPC_ML_BYODPlanToDTTPlanOnAdditionalLine = YamlHandler.getPPCdata("tc46_SOHO_PPC_ML_BYODPlanToDTTPlanOnAdditionalLine");
		BFA_ProdTest_tc02_AALTERM_FinancingPlanPotg = YamlHandler.getAALdata("BFA_ProdTest_tc02_AALTERM_FinancingPlanPotg");
		BFA_ProdTest_tc03_AALBYOD_StdShipping = YamlHandler.getAALdata("BFA_ProdTest_tc03_AALBYOD_StdShipping");
		BFA_ProdTest_tc04_AALTERM_Tablet_StdShipping = YamlHandler.getAALdata("BFA_ProdTest_tc04_AALTERM_Tablet_StdShipping");
		BFA_ProdTest_tc05_HUPWithPPC_StdShipping = YamlHandler.getHUPdata("BFA_ProdTest_tc05_HUPWithPPC_StdShipping");
		BFA_ProdTest_tc06_PPC_FinancingPlan = YamlHandler.getPPCdata("BFA_ProdTest_tc06_PPC_FinancingPlan");
	}
	
	private static void buyFlowsOneViewDataInit() throws FileNotFoundException {
		bfaOneViewConfig =  YamlHandler.getBFAOneViewConfig();
		//sauceSettings = YamlHandler.getSauceSettings("/test-data/rogers/buyflows/SauceSettings.yml");
		bfaOneViewPaymentInfo = YamlHandler.getBFAOneViewPaymentDetails();
		buyFlowsOVtestCase01 = YamlHandler.getHUPdataOneView("tc01OVHUPWithPPCMultilineAccount");
		buyFlowsOVtestCase02 = YamlHandler.getHUPdataOneView("tc02OVHUPExistingPlanMultilineAccount");
		buyFlowsOVtestCase03 = YamlHandler.getPPCdataOneView("tc03OVPPCMultilineAccountForBothLines");
		buyFlowsOVtestCase04 = YamlHandler.getPPCdataOneView("tc04OVPPCMultilineAccount");
		buyFlowsOVtestCase05 = YamlHandler.getHUPdataOneView("tc05OVHUPWithPPCSinglelineAccount");
		buyFlowsOVtestCase06 = YamlHandler.getHUPdataOneView("tc06OVHUPExistingPlanSinglelineAccount");
		buyFlowsOVtestCase07 = YamlHandler.getPPCdataOneView("tc07OVPPCSinglelineAccount");
		buyFlowsOVtestCase08 = YamlHandler.getAALdataOneView("tc08OVAALSinglelineBopisShippingAccount");
		buyFlowsOVtestCase09 = YamlHandler.getAALdataOneView("tc09OVAALSinglelinePOTGShippingAccount");
		buyFlowsOVtestCase10 = YamlHandler.getAALdataOneView("tc10OVAALNonShareNoTermQCStandardShippingAccount");
		buyFlowsOVtestCase11 = YamlHandler.getAALdataOneView("tc11OVAALTabletShareTermStandardShippingAccount");
		buyFlowsOVtestCase12 = YamlHandler.getAALdataOneView("tc12OVAALBYODBopisShippingAccount");
		buyFlowsOVtestCase13 = YamlHandler.getAALdataOneView("tc13OVAALBYODNonShareStandardShippingAccount");
		buyFlowsOVtestCase14 = YamlHandler.getRedesignOVNACData("tc14OVNACOutboundNoTermStandardShipping");
		buyFlowsOVtestCase15 = YamlHandler.getRedesignOVNACData("tc15OVNACOutboundFinanceStandardShipping");
		buyFlowsOVtestCase16 = YamlHandler.getRedesignOVNACData("tc16OVNACFieldSalesUpfrontExpressShipping");
		buyFlowsOVtestCase17 = YamlHandler.getRedesignOVNACData("tc17OVNACCSR");
		buyFlowsOVtestCase18 = YamlHandler.getRedesignOVNACData("tc18OVNACBYODOutboundPlanPortin");
		buyFlowsOVtestCase19 = YamlHandler.getRedesignOVNACData("tc19OVNACOutboundHighRiskQCFrench");
		buyFlowsOVtestCase20 = YamlHandler.getRedesignOVNACData("tc20OVNACOutboundBasicPhoneTTPlanMB");
		buyFlowsOVtestCase21 = YamlHandler.getRedesignOVNACData("tc21OVNACCableCustomerPassportAndSIN");
		buyFlowsOVtestCase22 = YamlHandler.getRedesignOVNACData("tc21OVNACFieldSalesNACToAALNoTermStandardShipping");
		tc23SOHONACBYODNonShareBopis = YamlHandler.getRedesignOVNACData("tc23SOHONACBYODNonShareBopis");
		buyFlowsOVtestCase25 = YamlHandler.getHUPdataOneView("tc25OVSOHOHUPWithPPCOnMainLinePOTG");
		buyFlowsOVtestCase26 = YamlHandler.getHUPdataOneView("tc26OVSOHOHUPWithKEPOnAdditionalLineStdShip");
		buyFlowsOVtestCase27 = YamlHandler.getHUPdataOneView("tc27_OVConsumerHUPWithPPC_OnMainLine_POTG");
		buyFlowsOVtestCase28 = YamlHandler.getHUPdataOneView("tc28_OVConsumerHUPWithPPC_OnAdditionalLine_MR_StdShip_FR");
		buyFlowsOVtestCase29 = YamlHandler.getHUPdataOneView("tc29_OVConsumerHUPWithKEP_OnAdditionalLine_POTG");
		buyFlowsOVtestCase30 = YamlHandler.getHUPdataOneView("tc30_OVConsumerHUPWithPPC_FraudulentAddressValidation");
		buyFlowsOVtestCase31 = YamlHandler.getHUPdataOneView("tc31_OVConsumerHUPWithPPC_EditShipAddrInReviewPage");
		buyFlowsOVtestCase32 = YamlHandler.getHUPdataOneView("tc32_OVConsumerHUPWithPPC_OutboundPlan_BOPIS");
		buyFlowsOVtestCase33 = YamlHandler.getHUPdataOneView("tc33_OVConsumerHUP_CLAExceededValidation");
		buyFlowsOVtestCase34 = YamlHandler.getHUPdataOneView("tc34_OVConsumerHUP_ML_QCProv");

		bfaOneViewLogin = YamlHandler.getBFAOneViewLoginDetails();
	}
	
	private static void chOneViewDataInit() throws FileNotFoundException {
		ovPaymentInfo = YamlHandler.getOVPaymentDetails();
		igniteTVParentalcontrols = YamlHandler.getOVAccountData("IgniteTVParentalcontrols");
		solarisAccount = YamlHandler.getOVAccountData("SolarisAccount");
		solarisTV = YamlHandler.getOVAccountData("SolarisTV");
		anonymousData = YamlHandler.getContactData("AnonymousData");
		nacTMP = YamlHandler.getContactData("NAC_TMP");
		migrationData = YamlHandler.getMigrationData("MigrationData");
		migrationDataToSAI = YamlHandler.getMigrationData("MigrationData1PToSAI");
		migrationDataToISS = YamlHandler.getMigrationData("MigrationData1PToISS");
		migrationData1PTo2P = YamlHandler.getMigrationData("MigrationData1PTo2P");
		migrationData1PTo3P = YamlHandler.getMigrationData("MigrationData1PTo3P");
		migrationData3PSameNumber = YamlHandler.getMigrationData("MigrationData3PSameNumber");
		migrationData1PRHPTo3P = YamlHandler.getMigrationData("MigrationData1P_RHP_To3P");
		addChannelImmediate = YamlHandler.getMigrationData("1543_AddChannelsImmediate");
		addThemepackImmediate = YamlHandler.getMigrationData("1544_AddThemepackImmediate");
		addRemoveThemepackImmediate = YamlHandler.getMigrationData("1541_AddRemoveThemepackUpgradeImmediate");
		addChannelAndThempackImmediate = YamlHandler.getMigrationData("1539_AddChannelandThemepackImmediate");
		TC023_TVPackageDowngrade= YamlHandler.getOVAccountData("TC_023_TV_PackageDowngrade");
		TC026_TVPackageUpgrade= YamlHandler.getOVAccountData("TC026_TVPackageUpgrade");
		TC028_InternetPackageDowngrade= YamlHandler.getOVAccountData("TC_028_Internet_PackageDowngrade");
		tupeloDowngradeTest= YamlHandler.getOVAccountData("1460_Tupelo_Internet_Downgrade");
		tupeloUpgradeTest= YamlHandler.getOVAccountData("1464_Tupelo_Internet_Upgrade");
		TC032_SAI_AddingSmartStream =YamlHandler.getOVAccountData("TC32_SAI_AddingSmartstream");
		TC030_Internet_PackageUpgrade =YamlHandler.getOVAccountData("TC_030_Internet_PackageUpgrade");
		SUS_15702_TC01_Validation_Of_CallerID  =YamlHandler.getOVAccountData("SUS_15702_TC01_Validation_Of_CallerID");
		SUS_16553_TC01_Validation_of_Exchange_Flex_Channels_Existing_Customer =YamlHandler.getOVAccountData("SUS_16553_TC01_Validation_of_Exchange_Flex_Channels_Existing_Customer");
		RHPManage_AddOns =YamlHandler.getOVAccountData("RHPManageAddon");
		InternetDashboardSupportLinks=YamlHandler.getOVAccountData("InternetDashboardSupportLinks");
		targetedMigration1PInternetToSAI=YamlHandler.getMigrationData("1545_TargetedMigrationFlow_1P_Internet_to_SAITest");
		targetedMigration1PInternetToSAIISS=YamlHandler.getMigrationData("1546_TargetedMigrationFlow_1P_Internet_to_SAIISS");
		targetedMigration1PInternetTo2P=YamlHandler.getMigrationData("1547_TargetedMigrationFlow_1P_Internet_to_2P");
		targetedMigration1PInternetTo3P= YamlHandler.getMigrationData("1548_TargetedMigrationFlow_1P_Internet_to_3P");
		targetedMigration1PTvToSAIISS=YamlHandler.getMigrationData("1549_TargetedMigrationFlow_1P_TV_to_SAIISS");
		targetedMigration1PTvTo2P=YamlHandler.getMigrationData("1550_TargetedMigrationFlow_1P_TV_to_2P");
		targetedMigration1PTvTo3P= YamlHandler.getMigrationData("1551_TargetedMigrationFlow_1P_TV_to_3P");
		targetedMigration2PInternetAndTVTo3P=YamlHandler.getMigrationData("1556_TargetedMigrationFlow_2P_InternetAndTV_to_3P");
		targetedMigration2PInternetAndTVTo2P=YamlHandler.getMigrationData("1555_TargetedMigrationFlow_2P_InternetToTV_to_2P");
		targetedMigration2PInternetAndTVToSAI = YamlHandler.getMigrationData(("1553_TargetedMigrationFlow_2P_InternetAndTV_to_SAI"));
		targetedMigration2PInternetAndTVToSAIISS= YamlHandler.getMigrationData("1554_TargetedMigrationFlow_2P_InternetAndTV_to_SAIISS");
		targetedMigration3PtoSAIISS=YamlHandler.getMigrationData("1565_TC01_TargetedMigration_3P_to_SAIISS");
		targetedMigration_3P_to_2P=YamlHandler.getMigrationData("1566_TC01_TargetedMigration_3P_to_2P");
		targetedMigration_3P_to_3P_same_numb=YamlHandler.getMigrationData("1567_TC01_TargetedMigration_3P_to_3P_same_numb");
		targetedMigration_3P_to_3P_change_numb=YamlHandler.getMigrationData("1568_TC01_TargetedMigration_3P_to_3P_change_numb");
		RemoveThemepack1544Tc03=YamlHandler.getOVAccountData("1544_TC03_RemoveThemepackImmediate");
		ChangePaymentMethod=YamlHandler.getOVAccountData("Change_Payment_Method");
		User_New_Profile_Creation= YamlHandler.getOVAccountData("User_New_Profile_Creation");
		ChangeTvViaServiceability=YamlHandler.getOVAccountData("ChangeTvViaServiceability");
		Make_a_Payment_EN= YamlHandler.getOVAccountData("Make_a_Payment_EN");
		Oasys_Gap_Closure_Change_Internet_via_Serviceability_Model= YamlHandler.getOVAccountData("Oasys_Gap_Closure_Change_Internet_via_Serviceability_Model");
		ViewBill= YamlHandler.getOVAccountData("ViewBill");
		IPTVDasboad_MulitplsSTB= YamlHandler.getOVAccountData("IPTVDasboad_MulitplsSTB");
		IgniteOffers_SAI_Adding_ISS= YamlHandler.getOVAccountData("IgniteOffers_SAI_Adding_ISS");
		IgniteOffersChangeTV_INTpackage= YamlHandler.getOVAccountData("Ignite0ffersChangeTV_INTpackage");
		Chargeable_pods= YamlHandler.getOVAccountData("Chargeable_pods");
	}

	private static void ovrDataInit() throws FileNotFoundException {
		ovrConfigData= YamlHandler.getOvrConfigData();
		ovrReusableData=YamlHandler.getOvrReusableData("ReUsabledata");
		ovrMigrationData2PInternetAndTvTo2P=YamlHandler.getOvrReusableData("Migration_Data_2P_to_2P_PortIn_Internet");
		ovrWirelessNacATL = YamlHandler.getOvrReusableData("WirelessCX_NAC_ATL");
		ovrWirelessNacON = YamlHandler.getOvrReusableData("WirelessCX_NAC_ON");
		anonymousData = YamlHandler.getContactData("AnonymousData");
		ovrMigrationData1pINTtoISSATL = YamlHandler.getOvrReusableData("Migration_Data_1pINT_to_ISS");
		ovrMigrationData3PTo3PATL = YamlHandler.getOvrReusableData("Migration_Data_3P_to_3P_ATL");
		ovrMigrationData3PTo3PON = YamlHandler.getOvrReusableData("Migration_Data_3P_to_3P_ON");
		legacy1PtoNac3pNewAddress = YamlHandler.getOvrReusableData("Legacy_1pINT_to_NAC_3p_NewAddress");
		existingIgniteCxToNac3pON = YamlHandler.getOvrReusableData("Existing_Ignite_Cx_to_3P_ON");
		ovrMigrationData1Pto2PAddPods = YamlHandler.getOvrReusableData("Migration_Data_1P_to_2P_Add_Pods");
		existingIgnite3PtoNac2pON = YamlHandler.getOvrReusableData("ExistingIgnite_3PCx_to_Nac_3P_ON");
		ovrMigrationData1pINTto2pTVINTAddPods = YamlHandler.getOvrReusableData("TC25_Mig_Data_1P_INT_to_2P_TV_INT_AddPods");
	}
}
